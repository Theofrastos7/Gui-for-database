/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Java_MysqlConn;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.sql.*;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;     

/**
 *
 * @author Theo
 */
public class promotion_log_frame extends javax.swing.JFrame {

    
    private static final String username = "root";
    private static final String password = "12345theo";
    private static final String DB_URL = "jdbc:mysql://localhost:3306/project2";
    
    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    int q, i, id, deleteItem;
    
    public promotion_log_frame() {
        initComponents();
        upDateDB();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    //=============================FUNCTION==========================//
    
    public void upDateDB()
    {
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(DB_URL,username,password);
            pst = sqlConn.prepareStatement("Select * FROM promotion_log");
            
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)jTable1.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next())
            {
                Vector columnData = new Vector();
                
                for (i = 1; i<= q; i++)
                {
                    columnData.add(rs.getString("em_username"));
                    columnData.add(rs.getInt("job_id"));
                    columnData.add(rs.getString("status"));
                    columnData.add(rs.getString("evaluator1"));
                    columnData.add(rs.getString("evaluator2"));
                    columnData.add(rs.getString("average_score"));
                    
                }
                
                RecordTable.addRow(columnData);
            }                
        }
        catch(Exception ex) 
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        
    }    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Username_label = new javax.swing.JLabel();
        Password_label = new javax.swing.JLabel();
        lastname_label = new javax.swing.JLabel();
        reg_date_label = new javax.swing.JLabel();
        em_username_text = new javax.swing.JTextField();
        job_id_text = new javax.swing.JTextField();
        status_text = new javax.swing.JTextField();
        evaluator1_text = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        insert_button = new javax.swing.JButton();
        update_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        exit_button = new javax.swing.JButton();
        reset_button = new javax.swing.JButton();
        average_score_label = new javax.swing.JLabel();
        evaluator2_text = new javax.swing.JTextField();
        email_label2 = new javax.swing.JLabel();
        average_score_text = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        username_table = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        status_table = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        job_id_table = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        evaluator1_table = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        evaluator2_table = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        average_score_table = new javax.swing.JTable();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Promotion_log");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Username_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Username_label.setText("Em_username");

        Password_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Password_label.setText("job_id");

        lastname_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lastname_label.setText("status");

        reg_date_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        reg_date_label.setText("evaluator1");

        em_username_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                em_username_textMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                em_username_textMouseEntered(evt);
            }
        });
        em_username_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                em_username_textActionPerformed(evt);
            }
        });

        job_id_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                job_id_textMouseClicked(evt);
            }
        });
        job_id_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                job_id_textActionPerformed(evt);
            }
        });

        status_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                status_textMouseClicked(evt);
            }
        });
        status_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                status_textActionPerformed(evt);
            }
        });

        evaluator1_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                evaluator1_textMouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "em_username", "job_id", "status", "evaluator1", "evaluator2", "Average Score"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        insert_button.setText("Insert");
        insert_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_buttonActionPerformed(evt);
            }
        });

        update_button.setText("Update");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        delete_button.setText("Delete");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        exit_button.setText("Exit");
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });

        reset_button.setText("Reset");
        reset_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_buttonActionPerformed(evt);
            }
        });

        average_score_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        average_score_label.setText("average_score");

        evaluator2_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                evaluator2_textMouseClicked(evt);
            }
        });

        email_label2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        email_label2.setText("evaluator2");

        average_score_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                average_score_textMouseClicked(evt);
            }
        });

        username_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        username_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                username_tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(username_table);

        status_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        status_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                status_tableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(status_table);

        job_id_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        job_id_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                job_id_tableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(job_id_table);

        evaluator1_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        evaluator1_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                evaluator1_tableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(evaluator1_table);

        evaluator2_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        evaluator2_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                evaluator2_tableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(evaluator2_table);

        average_score_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        average_score_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                average_score_tableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(average_score_table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Username_label)
                            .addComponent(reg_date_label))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(em_username_text, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(evaluator1_text, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                            .addComponent(job_id_text, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                        .addGap(40, 40, 40)
                                        .addComponent(lastname_label, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(email_label2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(6, 6, 6)
                                                .addComponent(evaluator2_text, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(average_score_label)))
                                .addContainerGap(159, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(status_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(average_score_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(update_button)
                                    .addComponent(insert_button)
                                    .addComponent(delete_button)
                                    .addComponent(reset_button, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(153, 153, 153))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(em_username_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(job_id_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastname_label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(status_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reg_date_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(evaluator1_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email_label2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(evaluator2_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(average_score_label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(average_score_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(insert_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update_button)
                        .addGap(18, 18, 18)
                        .addComponent(delete_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reset_button)
                        .addGap(18, 18, 18)
                        .addComponent(exit_button))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insert_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_buttonActionPerformed
        
       try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(DB_URL,username,password);
            pst = sqlConn.prepareStatement("INSERT INTO promotion_log(em_username, job_id,"
                    + "status, evaluator1, evaluator2, average_score) VALUES (?, ?, ?, ?, ?, ?)");
            
            pst.setString(1, em_username_text.getText());
            pst.setString(2, job_id_text.getText());
            pst.setString(3, status_text.getText());
            pst.setString(4, evaluator1_text.getText());
            pst.setString(5, evaluator2_text.getText());
            pst.setString(6, average_score_text.getText());
            
            int rowsUpdates = pst.executeUpdate();
            
            if (rowsUpdates > 0) {
                JOptionPane.showMessageDialog(this, "Record Added.");
            upDateDB();
            } else {
                JOptionPane.showMessageDialog(this, "No changes made. Record not added.");
            }
       }
       
       catch(ClassNotFoundException ex)
       {
           java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE,
                   null, ex);  
       }
       catch(SQLException ex)
       {
           java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE,
                   null, ex);  
       }        
    }//GEN-LAST:event_insert_buttonActionPerformed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
     try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(DB_URL,username,password);
            pst = sqlConn.prepareStatement("DELETE FROM promotion_log WHERE em_username = ? AND job_id = ?");
            
            pst.setString(1, em_username_text.getText());
            pst.setString(2, job_id_text.getText());
                        
            int rowsUpdates = pst.executeUpdate();
            
            if (rowsUpdates > 0) {
                JOptionPane.showMessageDialog(this, "Record Deleted.");
            upDateDB();
            } else {
                JOptionPane.showMessageDialog(this, "No changes made. Record not deleted.");
            }
        }
       
       catch(ClassNotFoundException ex)
       {
           java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE,
                   null, ex);  
       }
       catch(SQLException ex)
       {
           java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE,
                   null, ex);  
           
       }   
              
    }//GEN-LAST:event_delete_buttonActionPerformed

    private JFrame frame;
    
    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        
        frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Confirm if you want to exit.", "MySQL User",
               JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
        {
            this.dispose();
        }
    }//GEN-LAST:event_exit_buttonActionPerformed

    private void reset_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_buttonActionPerformed
       em_username_text.setText("");
       status_text.setText("");
       evaluator1_text.setText("");
       job_id_text.setText("");
       evaluator2_text.setText("");
       average_score_text.setText("");
    }//GEN-LAST:event_reset_buttonActionPerformed

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(DB_URL,username,password);
            pst = sqlConn.prepareStatement("UPDATE promotion_log SET em_username = ?, job_id = ?,"
                    + "status = ?, evaluator1 = ?, evaluator2 = ?, average_score = ?"
                    + "WHERE em_username = ? AND job_id = ?");
            
            pst.setString(1, em_username_text.getText());
            pst.setString(2, job_id_text.getText());
            pst.setString(3, status_text.getText());
            pst.setString(4, evaluator1_text.getText());
            pst.setString(5, evaluator2_text.getText());
            pst.setString(6, average_score_text.getText());
            
            pst.setString(7, em_username_text.getText()); // Use the username entered by the user
            pst.setString(8, job_id_text.getText());
            
            int rowsUpdates = pst.executeUpdate();
            
            if (rowsUpdates > 0) {
                JOptionPane.showMessageDialog(this, "Record Updated.");
            upDateDB();
            } else {
                JOptionPane.showMessageDialog(this, "No changes made. Record not updated.");
            }
        }
       
       catch(ClassNotFoundException ex)
       {
           java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE,
                   null, ex);  
       }
       catch(SQLException ex)
       {
           java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE,
                   null, ex);  
           
       }
    }//GEN-LAST:event_update_buttonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel)jTable1.getModel();
        int SelectedRows = jTable1.getSelectedRow();
        
        em_username_text.setText(RecordTable.getValueAt(SelectedRows, 0).toString()); 
        job_id_text.setText(RecordTable.getValueAt(SelectedRows, 1).toString());     
        status_text.setText(RecordTable.getValueAt(SelectedRows, 2).toString());   
        evaluator1_text.setText(RecordTable.getValueAt(SelectedRows, 3).toString());   
        evaluator2_text.setText(RecordTable.getValueAt(SelectedRows, 4).toString()); 
        average_score_text.setText(RecordTable.getValueAt(SelectedRows, 5).toString()); 
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void job_id_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_job_id_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_job_id_textActionPerformed

    private void em_username_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_em_username_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_em_username_textActionPerformed

    private void em_username_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_em_username_textMouseClicked
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(DB_URL,username,password);
            pst = sqlConn.prepareStatement("Select username FROM employee");
            
            username_table.setVisible(true);
                        
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)username_table.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next())
            {
                Vector columnData = new Vector();
                
                for (i = 1; i<= q; i++)
                {
                    columnData.add(rs.getString("username"));
                    
                }
                
                RecordTable.addRow(columnData);
            }                
        }
        catch(Exception ex) 
        {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_em_username_textMouseClicked

    private void em_username_textMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_em_username_textMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_em_username_textMouseEntered

    private void username_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_username_tableMouseClicked
      
        DefaultTableModel RecordTable = (DefaultTableModel)username_table.getModel();
        int SelectedRows = username_table.getSelectedRow();
        
        em_username_text.setText(RecordTable.getValueAt(SelectedRows, 0).toString()); 
        
        username_table.setVisible(false);        
    }//GEN-LAST:event_username_tableMouseClicked

    private void status_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_status_tableMouseClicked
       
        DefaultTableModel RecordTable = (DefaultTableModel)status_table.getModel();
        int SelectedRows = status_table.getSelectedRow();
        
        status_text.setText(RecordTable.getValueAt(SelectedRows, 0).toString()); 
        
        status_table.setVisible(false); 
    }//GEN-LAST:event_status_tableMouseClicked

    private void job_id_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_job_id_textMouseClicked
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(DB_URL,username,password);
            pst = sqlConn.prepareStatement("Select id FROM job ORDER BY id ASC");
            
            job_id_table.setVisible(true);
                        
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)job_id_table.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next())
            {
                Vector columnData = new Vector();
                
                for (i = 1; i<= q; i++)
                {
                    columnData.add(rs.getString("id"));
                    
                }
                
                RecordTable.addRow(columnData);
            }                
        }
        catch(Exception ex) 
        {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_job_id_textMouseClicked

    private void job_id_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_job_id_tableMouseClicked
        
       DefaultTableModel RecordTable = (DefaultTableModel)job_id_table.getModel();
        int SelectedRows = job_id_table.getSelectedRow();
        
        job_id_text.setText(RecordTable.getValueAt(SelectedRows, 0).toString()); 
        
        job_id_table.setVisible(false);  
        
    }//GEN-LAST:event_job_id_tableMouseClicked

    private void status_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_status_textMouseClicked
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(DB_URL,username,password);
            pst = sqlConn.prepareStatement("Select DISTINCT status FROM promotion_log");
            
            status_table.setVisible(true);
                        
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)status_table.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next())
            {
                Vector columnData = new Vector();
                
                for (i = 1; i<= q; i++)
                {
                    columnData.add(rs.getString("status"));
                    
                }
                
                RecordTable.addRow(columnData);
            }                
        }
        catch(Exception ex) 
        {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_status_textMouseClicked

    private void status_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_status_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_status_textActionPerformed

    private void evaluator1_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evaluator1_tableMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel)evaluator1_table.getModel();
        int SelectedRows = evaluator1_table.getSelectedRow();
        
        evaluator1_text.setText(RecordTable.getValueAt(SelectedRows, 0).toString()); 
        
        evaluator1_table.setVisible(false);  
    }//GEN-LAST:event_evaluator1_tableMouseClicked

    private void evaluator1_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evaluator1_textMouseClicked
       try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(DB_URL,username,password);
            pst = sqlConn.prepareStatement("Select username FROM evaluator");
            
            evaluator1_table.setVisible(true);
                        
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)evaluator1_table.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next())
            {
                Vector columnData = new Vector();
                
                for (i = 1; i<= q; i++)
                {
                    columnData.add(rs.getString("username"));
                    
                }
                
                RecordTable.addRow(columnData);
            }                
        }
        catch(Exception ex) 
        {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_evaluator1_textMouseClicked

    private void evaluator2_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evaluator2_tableMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel)evaluator2_table.getModel();
        int SelectedRows = evaluator2_table.getSelectedRow();
        
        evaluator2_text.setText(RecordTable.getValueAt(SelectedRows, 0).toString()); 
        
        evaluator2_table.setVisible(false);  
    }//GEN-LAST:event_evaluator2_tableMouseClicked

    private void evaluator2_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evaluator2_textMouseClicked
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(DB_URL,username,password);
            pst = sqlConn.prepareStatement("Select username FROM evaluator");
            
            evaluator2_table.setVisible(true);
                        
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)evaluator2_table.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next())
            {
                Vector columnData = new Vector();
                
                for (i = 1; i<= q; i++)
                {
                    columnData.add(rs.getString("username"));
                    
                }
                
                RecordTable.addRow(columnData);
            }                
        }
        catch(Exception ex) 
        {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_evaluator2_textMouseClicked

    private void average_score_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_average_score_tableMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel)average_score_table.getModel();
        int SelectedRows = average_score_table.getSelectedRow();
        
        average_score_text.setText(RecordTable.getValueAt(SelectedRows, 0).toString()); 
        
        average_score_table.setVisible(false); 
    }//GEN-LAST:event_average_score_tableMouseClicked

    private void average_score_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_average_score_textMouseClicked
        try {
        // Assuming average_score_table is your JTable instance

        // Create a DefaultTableModel
        DefaultTableModel model = new DefaultTableModel();
        average_score_table.setModel(model);

        // Add a column to the model
        model.addColumn("Numbers");

        // Add numbers from 0 to 20 to the table
        for (int i = 0; i <= 20; i++) {
            model.addRow(new Object[]{i});
        }

        // Make the table visible
        average_score_table.setVisible(true);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, ex);
    }
    }//GEN-LAST:event_average_score_textMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(promotion_log_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new promotion_log_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Password_label;
    private javax.swing.JLabel Username_label;
    private javax.swing.JLabel average_score_label;
    private javax.swing.JTable average_score_table;
    private javax.swing.JTextField average_score_text;
    private javax.swing.JButton delete_button;
    private javax.swing.JTextField em_username_text;
    private javax.swing.JLabel email_label2;
    private javax.swing.JTable evaluator1_table;
    private javax.swing.JTextField evaluator1_text;
    private javax.swing.JTable evaluator2_table;
    private javax.swing.JTextField evaluator2_text;
    private javax.swing.JButton exit_button;
    private javax.swing.JButton insert_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable job_id_table;
    private javax.swing.JTextField job_id_text;
    private javax.swing.JLabel lastname_label;
    private javax.swing.JLabel reg_date_label;
    private javax.swing.JButton reset_button;
    private javax.swing.JTable status_table;
    private javax.swing.JTextField status_text;
    private javax.swing.JButton update_button;
    private javax.swing.JTable username_table;
    // End of variables declaration//GEN-END:variables
}
